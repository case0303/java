Exception(예외)
- error는 프로그램의 실행에 치명적인 영향을 미치는 상황을 나타낸다.
- 따라서 Error가 발생하면 프로그램을 종료된다.
- Exception은 적절한 처리를 통해 프로그램이 계속 실행 할 수 있는 정도의 에러
- Exception 처리는 2가지 방법을 사용한다.
> try ~ catch ~ finally
- 예외의 원인이 현재 실행되는 블록에 있는 경우 직접 예외를 처리하는 구문
-> try{
	//예외가 발생할 가능성이 있는 코드
   }catch(Exception e){
   	// 예외가 발생했을때 실행할 코드
   }finally{
   	// 반드시 실행해야 하는 코드 (ex] 자원반납)
   }

>Throws
- 예외 원인이 그 매서드를 호출하는 호출자에게 있는 경우
- 예외 발생시 예외가 발생했음을 메서드 호출자에게 통지해줌
- 메서드 선언부에 throws 절을 사용
ex) 반환타입 메서드명(매개변수) throws[예외들,]{
}

- 사용자 정의 예외
> Exception 또는 하위 예외 클래스들을 상속 받아 구현합니다.
> 예외를 발생시키고 싶을때 ,
throws
